{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 117, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 309, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,0KACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SAAS;QACX;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAOF,SAAS,MAAM,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAmB;IACzD,qBACE,8OAAC;QAAI,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QAAa,GAAG,KAAK;;;;;;AAExE","debugId":null}},
    {"offset": {"line": 351, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/services/orderService.ts"],"sourcesContent":["'use server';\n// import { db } from '@/lib/firebase'; // Firebase import removed\nimport type { Order, OrderItem } from '@/lib/types';\nimport { getCollection } from './mongodbService';\nimport { ObjectId } from 'mongodb';\n// import { collection, getDocs, addDoc, doc, updateDoc, query, orderBy, Timestamp, serverTimestamp } from 'firebase/firestore';\n\n// const ORDERS_COLLECTION = 'orders';\n\ninterface MongoOrder extends Order {\n  _id: ObjectId;\n}\n\nfunction mapMongoOrderToOrder(mongoOrder: MongoOrder): Order {\n  const { _id, ...orderData } = mongoOrder;\n  return orderData;\n}\n\n// Mock data for demonstration purposes\nlet mockOrders: Order[] = [];\n\n// Helper to simulate server-side delay and potential errors\nconst simulateApiCall = <T>(data: T, shouldFail = false): Promise<T> => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldFail) {\n        reject(new Error(\"Simulated network error\"));\n      } else {\n        resolve(JSON.parse(JSON.stringify(data))); // Deep clone for objects/arrays\n      }\n    }, 500);\n  });\n};\n\nexport async function getOrders(): Promise<Order[]> {\n  const collection = await getCollection('orders');\n  const mongoOrders = await collection.find({}).sort({ createdAt: -1 }).toArray() as MongoOrder[];\n  return mongoOrders.map(mapMongoOrderToOrder);\n}\n\nexport async function addOrder(orderData: Omit<Order, 'id' | 'createdAt' | 'updatedAt'>): Promise<Order> {\n  const collection = await getCollection('orders');\n  const newOrder: Omit<MongoOrder, '_id'> = {\n    ...orderData,\n    id: `order_${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  const result = await collection.insertOne(newOrder);\n  const insertedOrder = await collection.findOne({ _id: result.insertedId }) as MongoOrder;\n  return mapMongoOrderToOrder(insertedOrder);\n}\n\nexport async function updateOrderStatus(orderId: string, status: Order['status']): Promise<void> {\n  const collection = await getCollection('orders');\n  const result = await collection.updateOne(\n    { id: orderId },\n    { \n      $set: { \n        status,\n        updatedAt: new Date()\n      }\n    }\n  );\n  \n  if (result.matchedCount === 0) {\n    throw new Error(\"Order not found\");\n  }\n}\n\nexport async function getOrderById(orderId: string): Promise<Order | null> {\n  const collection = await getCollection('orders');\n  const mongoOrder = await collection.findOne({ id: orderId }) as MongoOrder | null;\n  return mongoOrder ? mapMongoOrderToOrder(mongoOrder) : null;\n}\n\nexport async function deleteOrder(orderId: string): Promise<void> {\n  const collection = await getCollection('orders');\n  const result = await collection.deleteOne({ id: orderId });\n  \n  if (result.deletedCount === 0) {\n    throw new Error(\"Order not found for deletion\");\n  }\n}\n\n// Function to initialize mock orders if needed for testing\nexport async function initializeMockOrders(orders: Order[]): Promise<void> {\n  mockOrders = orders.map(order => ({\n    ...order,\n    // Ensure createdAt is a Date object if it's coming from JSON/Timestamp-like structure\n    createdAt: order.createdAt ? new Date((order.createdAt as any).seconds ? (order.createdAt as any).seconds * 1000 : order.createdAt) : new Date(),\n    updatedAt: order.updatedAt ? new Date((order.updatedAt as any).seconds ? (order.updatedAt as any).seconds * 1000 : order.updatedAt) : new Date(),\n  }));\n  console.log(\"Mock orders initialized.\");\n}"],"names":[],"mappings":";;;;;;;;;;IAkCsB;IAMA;IAcA;IAiBA;IAMA;IAUA","debugId":null}},
    {"offset": {"line": 373, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/app/admin/orders/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect, useCallback } from 'react';\nimport type { Order } from '@/lib/types';\nimport { Button } from '@/components/ui/button';\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Eye, CheckCircle, XCircle, Clock, Loader2 } from 'lucide-react';\nimport { format } from 'date-fns';\nimport { he } from 'date-fns/locale';\nimport { getOrders, updateOrderStatus } from '@/services/orderService';\nimport { useToast } from '@/hooks/use-toast';\n\nconst statusTranslations: Record<Order['status'], string> = {\n  open: 'פתוחה',\n  closed: 'סגורה',\n  canceled: 'מבוטלת',\n};\n\nconst statusColors: Record<Order['status'], string> = {\n  open: 'bg-blue-500 hover:bg-blue-600',\n  closed: 'bg-green-500 hover:bg-green-600',\n  canceled: 'bg-red-500 hover:bg-red-600',\n};\n\nexport default function AdminOrdersPage() {\n  const [orders, setOrders] = useState<Order[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [filterStatus, setFilterStatus] = useState<Order['status'] | 'all'>('all');\n  const { toast } = useToast();\n\n  const fetchOrdersData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const fetchedOrders = await getOrders();\n      setOrders(fetchedOrders);\n    } catch (error) {\n      console.error(\"AdminOrdersPage fetchOrdersData error:\", error);\n      const errorMessage = error instanceof Error ? error.message : \"שגיאה לא ידועה\";\n      toast({ \n        title: \"שגיאה בטעינת הזמנות\", \n        description: `לא ניתן לטעון הזמנות: ${errorMessage}. בדוק את חיבור האינטרנט והגדרות Firebase. פרטים נוספים עשויים להיות ביומן השרת.`, \n        variant: \"destructive\",\n        duration: 10000\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchOrdersData();\n  }, [fetchOrdersData]);\n\n  const filteredOrders = orders.filter(order =>\n    filterStatus === 'all' ? true : order.status === filterStatus\n  );\n\n  const handleViewOrder = (order: Order) => {\n    // Basic alert, can be expanded to a modal\n    let itemsSummary = order.items.map(item => `${item.plantName} (כמות: ${item.quantity})`).join('\\n');\n    alert(`צפייה בהזמנה:\\nלקוח: ${order.userName}\\nמייל: ${order.userEmail}\\nטלפון: ${order.userPhone}\\nסטטוס: ${statusTranslations[order.status]}\\nסה\"כ פריטים: ${order.totalItems}\\nפריטים:\\n${itemsSummary}`);\n  };\n  \n  const handleChangeStatus = async (orderId: string, newStatus: Order['status']) => {\n    try {\n      await updateOrderStatus(orderId, newStatus);\n      toast({ title: \"הצלחה\", description: `סטטוס הזמנה ${orderId} שונה ל-${statusTranslations[newStatus]}.` });\n      fetchOrdersData(); // Refresh list\n    } catch (error) {\n      const errorMessage = error instanceof Error ? error.message : \"שגיאה לא ידועה\";\n      toast({ title: \"שגיאה\", description: `שינוי סטטוס נכשל: ${errorMessage}`, variant: \"destructive\" });\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"flex justify-center items-center h-64\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-3xl font-bold text-primary\">ניהול הזמנות</h1>\n        <div className=\"w-full md:w-auto md:min-w-[200px]\">\n          <Select value={filterStatus} onValueChange={(value) => setFilterStatus(value as Order['status'] | 'all')}>\n            <SelectTrigger className=\"w-full h-11\">\n              <SelectValue placeholder=\"סנן לפי סטטוס\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">כל ההזמנות</SelectItem>\n              <SelectItem value=\"open\">פתוחות</SelectItem>\n              <SelectItem value=\"closed\">סגורות</SelectItem>\n              <SelectItem value=\"canceled\">מבוטלות</SelectItem>\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n\n      <div className=\"rounded-lg border overflow-hidden bg-card\">\n        <Table>\n          <TableHeader>\n            <TableRow>\n              <TableHead>#</TableHead>\n              <TableHead>לקוח</TableHead>\n              <TableHead>טלפון</TableHead>\n              <TableHead>תאריך</TableHead>\n              <TableHead className=\"text-center\">פריטים</TableHead>\n              <TableHead>סטטוס</TableHead>\n              <TableHead className=\"text-right w-[150px]\">פעולות</TableHead>\n            </TableRow>\n          </TableHeader>\n          <TableBody>\n            {filteredOrders.length > 0 ? filteredOrders.map((order) => (\n              <TableRow key={order.id}>\n                <TableCell className=\"font-mono text-xs\">{order.id.substring(0,6)}...</TableCell>\n                <TableCell className=\"font-medium\">{order.userName}</TableCell>\n                <TableCell>{order.userPhone}</TableCell>\n                <TableCell>{order.createdAt?.toDate ? format(order.createdAt.toDate(), 'P p', { locale: he }) : 'N/A'}</TableCell>\n                <TableCell className=\"text-center\">{order.totalItems}</TableCell>\n                <TableCell>\n                  <Badge className={`${statusColors[order.status]} text-white`}>{statusTranslations[order.status]}</Badge>\n                </TableCell>\n                <TableCell className=\"text-right space-x-1\" dir=\"ltr\">\n                  <Button variant=\"ghost\" size=\"icon\" onClick={() => handleViewOrder(order)} title=\"צפה בהזמנה\">\n                    <Eye className=\"h-4 w-4\" />\n                  </Button>\n                  {order.status === 'open' && (\n                    <>\n                    <Button variant=\"ghost\" size=\"icon\" onClick={() => handleChangeStatus(order.id, 'closed')} title=\"סמן כסגורה\" className=\"text-green-600 hover:text-green-700\">\n                        <CheckCircle className=\"h-4 w-4\" />\n                    </Button>\n                    <Button variant=\"ghost\" size=\"icon\" onClick={() => handleChangeStatus(order.id, 'canceled')} title=\"סמן כמבוטלת\" className=\"text-red-600 hover:text-red-700\">\n                        <XCircle className=\"h-4 w-4\" />\n                    </Button>\n                    </>\n                  )}\n                   {order.status !== 'open' && (\n                     <Button variant=\"ghost\" size=\"icon\" onClick={() => handleChangeStatus(order.id, 'open')} title=\"פתח מחדש\" className=\"text-blue-600 hover:text-blue-700\">\n                        <Clock className=\"h-4 w-4\" />\n                    </Button>\n                   )}\n                </TableCell>\n              </TableRow>\n            )) : (\n              <TableRow>\n                <TableCell colSpan={7} className=\"h-24 text-center text-muted-foreground\">\n                  לא נמצאו הזמנות.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}