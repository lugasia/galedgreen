{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/PlantCard.tsx"],"sourcesContent":["\"use client\";\n\nimport Image from \"next/image\";\nimport type { Plant } from \"@/lib/types\";\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { ShoppingCart, Info, Droplets, Sun, Trees, Tag, Package } from \"lucide-react\";\nimport { useCart } from \"@/contexts/CartContext\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface PlantCardProps {\n  plant: Plant;\n}\n\nexport function PlantCard({ plant }: PlantCardProps) {\n  const { addToCart } = useCart();\n  const { toast } = useToast();\n\n  const handleAddToCart = () => {\n    addToCart(plant);\n    toast({\n      title: `${plant.name} נוסף לעגלה!`,\n      description: \"תוכל להמשיך לקניות או לעבור לעגלה לסיום ההזמנה.\",\n      variant: \"default\",\n    });\n  };\n\n  return (\n    <Card className=\"flex flex-col overflow-hidden shadow-lg hover:shadow-xl transition-shadow duration-300 h-full\">\n      <CardHeader className=\"p-0\">\n        <div className=\"aspect-[4/3] relative w-full\">\n          <Image\n            src={plant.imageUrl || \"https://picsum.photos/400/300\"}\n            alt={plant.name}\n            layout=\"fill\"\n            objectFit=\"cover\"\n            className=\"transition-transform duration-300 group-hover:scale-105\"\n            data-ai-hint=\"plant nature\"\n            unoptimized={plant.imageUrl?.includes(\"picsum.photos\")}\n          />\n        </div>\n      </CardHeader>\n      <CardContent className=\"p-4 flex-grow\">\n        <CardTitle className=\"text-xl font-semibold text-primary mb-2\">{plant.name}</CardTitle>\n        <CardDescription className=\"text-sm text-muted-foreground mb-1 line-clamp-2\">\n          {plant.description || plant.uses}\n        </CardDescription>\n        \n        <div className=\"space-y-1.5 text-xs text-foreground mt-3\">\n          <div className=\"flex items-center gap-1.5\">\n            <Tag size={14} className=\"text-secondary\" />\n            <span>קטגוריה: {plant.category?.name || 'לא משויך'}</span>\n          </div>\n          <div className=\"flex items-center gap-1.5\">\n            <Trees size={14} className=\"text-secondary\" />\n            <span>גובה: {plant.height}</span>\n          </div>\n          <div className=\"flex items-center gap-1.5\">\n            <Droplets size={14} className=\"text-secondary\" />\n            <span>השקייה: {plant.watering}</span>\n          </div>\n          <div className=\"flex items-center gap-1.5\">\n            <Sun size={14} className=\"text-secondary\" />\n            <span>אור: {plant.light}</span>\n          </div>\n          <div className=\"flex items-center gap-1.5\">\n            <Info size={14} className=\"text-secondary\" />\n            <span>שימושים: {plant.uses}</span>\n          </div>\n           <div className=\"flex items-center gap-1.5\">\n            <Package size={14} className=\"text-secondary\" />\n            <span>מלאי: <span className={plant.stock > 0 ? 'text-green-600 font-medium' : 'text-red-600 font-medium'}>{plant.stock > 0 ? `${plant.stock} זמין` : 'אזל מהמלאי'}</span></span>\n          </div>\n        </div>\n      </CardContent>\n      <CardFooter className=\"p-4 border-t\">\n        <Button \n          variant=\"default\" \n          className=\"w-full bg-primary hover:bg-primary/90 text-primary-foreground\"\n          onClick={handleAddToCart}\n          disabled={plant.stock === 0}\n          aria-label={`הוסף ${plant.name} לעגלה`}\n        >\n          <ShoppingCart size={18} className=\"mr-2\" />\n          {plant.stock > 0 ? 'הוסף לעגלה' : 'אזל מהמלאי'}\n        </Button>\n      </CardFooter>\n    </Card>\n  );\n}\n\n"],"names":[],"mappings":";;;;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;;;AARA;;;;;;;AAcO,SAAS,UAAU,EAAE,KAAK,EAAkB;;IACjD,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC5B,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IAEzB,MAAM,kBAAkB;QACtB,UAAU;QACV,MAAM;YACJ,OAAO,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC;YAClC,aAAa;YACb,SAAS;QACX;IACF;IAEA,qBACE,6LAAC,mIAAA,CAAA,OAAI;QAAC,WAAU;;0BACd,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC,gIAAA,CAAA,UAAK;wBACJ,KAAK,MAAM,QAAQ,IAAI;wBACvB,KAAK,MAAM,IAAI;wBACf,QAAO;wBACP,WAAU;wBACV,WAAU;wBACV,gBAAa;wBACb,aAAa,MAAM,QAAQ,EAAE,SAAS;;;;;;;;;;;;;;;;0BAI5C,6LAAC,mIAAA,CAAA,cAAW;gBAAC,WAAU;;kCACrB,6LAAC,mIAAA,CAAA,YAAS;wBAAC,WAAU;kCAA2C,MAAM,IAAI;;;;;;kCAC1E,6LAAC,mIAAA,CAAA,kBAAe;wBAAC,WAAU;kCACxB,MAAM,WAAW,IAAI,MAAM,IAAI;;;;;;kCAGlC,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mMAAA,CAAA,MAAG;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDACzB,6LAAC;;4CAAK;4CAAU,MAAM,QAAQ,EAAE,QAAQ;;;;;;;;;;;;;0CAE1C,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,uMAAA,CAAA,QAAK;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC3B,6LAAC;;4CAAK;4CAAO,MAAM,MAAM;;;;;;;;;;;;;0CAE3B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6MAAA,CAAA,WAAQ;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC9B,6LAAC;;4CAAK;4CAAS,MAAM,QAAQ;;;;;;;;;;;;;0CAE/B,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,mMAAA,CAAA,MAAG;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDACzB,6LAAC;;4CAAK;4CAAM,MAAM,KAAK;;;;;;;;;;;;;0CAEzB,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,qMAAA,CAAA,OAAI;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC1B,6LAAC;;4CAAK;4CAAU,MAAM,IAAI;;;;;;;;;;;;;0CAE3B,6LAAC;gCAAI,WAAU;;kDACd,6LAAC,2MAAA,CAAA,UAAO;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC7B,6LAAC;;4CAAK;0DAAM,6LAAC;gDAAK,WAAW,MAAM,KAAK,GAAG,IAAI,+BAA+B;0DAA6B,MAAM,KAAK,GAAG,IAAI,GAAG,MAAM,KAAK,CAAC,KAAK,CAAC,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;0BAI3J,6LAAC,mIAAA,CAAA,aAAU;gBAAC,WAAU;0BACpB,cAAA,6LAAC,qIAAA,CAAA,SAAM;oBACL,SAAQ;oBACR,WAAU;oBACV,SAAS;oBACT,UAAU,MAAM,KAAK,KAAK;oBAC1B,cAAY,CAAC,KAAK,EAAE,MAAM,IAAI,CAAC,MAAM,CAAC;;sCAEtC,6LAAC,yNAAA,CAAA,eAAY;4BAAC,MAAM;4BAAI,WAAU;;;;;;wBACjC,MAAM,KAAK,GAAG,IAAI,eAAe;;;;;;;;;;;;;;;;;;AAK5C;GA3EgB;;QACQ,kIAAA,CAAA,UAAO;QACX,+HAAA,CAAA,WAAQ;;;KAFZ","debugId":null}},
    {"offset": {"line": 434, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 470, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 685, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/services/plantService.ts"],"sourcesContent":["'use server';\nimport type { Plant, Category } from '@/lib/types';\nimport { getCollection } from './mongodbService';\nimport { getCategories as getCategoriesFromService, clearCachedCategories } from './categoryService';\nimport { ObjectId } from 'mongodb';\n\ninterface RawPlantData {\n  Name?: string;\n  Category?: string;\n  \"גובה\"?: string;\n  \"השקיה\"?: string;\n  \"שימושים\"?: string;\n  Tag?: string;\n  Stock?: string;\n  Thumbnail?: string;\n}\n\ninterface MongoPlant extends Plant {\n  _id: ObjectId;\n}\n\nlet allCategories: Category[] | null = null;\n\nasync function getCategoryMap(): Promise<Map<string, string>> {\n  const categories = await getCategoriesFromService();\n  return new Map(categories.map(cat => [cat.name, cat.id]));\n}\n\nfunction mapMongoPlantToPlant(mongoPlant: MongoPlant): Plant {\n  const { _id, ...plantData } = mongoPlant;\n  return plantData;\n}\n\nexport async function getPlants(): Promise<Plant[]> {\n  const collection = await getCollection('plants');\n  const mongoPlants = await collection.find({}).toArray() as MongoPlant[];\n  return mongoPlants.map(mapMongoPlantToPlant);\n}\n\nexport async function getPlantsWithCategories(): Promise<Plant[]> {\n  const collection = await getCollection('plants');\n  const mongoPlants = await collection.find({}).toArray() as MongoPlant[];\n  const categories = await getCategoriesFromService();\n  const categoryMap = new Map(categories.map(cat => [cat.id, cat]));\n  const defaultCategoryForDisplay = { id: \"unknown\", name: \"לא משויך\", icon: \"Tags\" };\n\n  return mongoPlants.map(mongoPlant => {\n    const plant = mapMongoPlantToPlant(mongoPlant);\n    return {\n      ...plant,\n      category: categoryMap.get(plant.categoryId) || { ...defaultCategoryForDisplay, id: plant.categoryId },\n    };\n  });\n}\n\nexport async function getPlantById(plantId: string): Promise<Plant | null> {\n  const collection = await getCollection('plants');\n  const mongoPlant = await collection.findOne({ id: plantId }) as MongoPlant | null;\n  if (mongoPlant) {\n    const plant = mapMongoPlantToPlant(mongoPlant);\n    const categories = await getCategoriesFromService();\n    const categoryMap = new Map(categories.map(cat => [cat.id, cat]));\n    const defaultCategoryForDisplay = { id: \"unknown\", name: \"לא משויך\", icon: \"Tags\" };\n    return { ...plant, category: categoryMap.get(plant.categoryId) || { ...defaultCategoryForDisplay, id: plant.categoryId } };\n  }\n  return null;\n}\n\nexport async function addPlant(plantData: Omit<Plant, 'id' | 'category' | 'createdAt' | 'updatedAt'>): Promise<Plant> {\n  const collection = await getCollection('plants');\n  const newPlant: Omit<MongoPlant, '_id'> = {\n    ...plantData,\n    id: `${plantData.name.toLowerCase().replace(/\\s+/g, '-')}-${Date.now()}`,\n    createdAt: new Date(),\n    updatedAt: new Date(),\n  };\n  \n  const result = await collection.insertOne(newPlant);\n  const insertedPlant = await collection.findOne({ _id: result.insertedId }) as MongoPlant;\n  const plant = mapMongoPlantToPlant(insertedPlant);\n  const category = (await getCategoriesFromService()).find(c => c.id === plant.categoryId);\n  const defaultCategoryForDisplay = { id: \"unknown\", name: \"לא משויך\", icon: \"Tags\" };\n  return { ...plant, category: category || { ...defaultCategoryForDisplay, id: plant.categoryId } };\n}\n\nexport async function updatePlant(plantId: string, plantData: Partial<Omit<Plant, 'id' | 'category' | 'createdAt' | 'updatedAt'>>): Promise<void> {\n  const collection = await getCollection('plants');\n  const result = await collection.updateOne(\n    { id: plantId },\n    { $set: { ...plantData, updatedAt: new Date() } }\n  );\n  \n  if (result.matchedCount === 0) {\n    throw new Error(\"Plant not found for update\");\n  }\n}\n\nexport async function deletePlant(plantId: string): Promise<void> {\n  const collection = await getCollection('plants');\n  const result = await collection.deleteOne({ id: plantId });\n  \n  if (result.deletedCount === 0) {\n    throw new Error(\"Plant not found for deletion\");\n  }\n}\n\nexport async function importPlantsFromJson(jsonData: RawPlantData[]): Promise<void> {\n  const collection = await getCollection('plants');\n  const categoryMap = await getCategoryMap();\n  const defaultCategory = (await getCategoriesFromService()).find(cat => cat.name.toLowerCase() === \"uncategorized\") || \n                         (await getCategoriesFromService())[0];\n  const defaultCategoryId = defaultCategory.id;\n\n  const plants = jsonData\n    .map((item, index) => {\n      const plantName = item.Name?.trim();\n      if (!plantName) return null;\n\n      const categoryName = item.Category?.trim();\n      let categoryId = categoryName ? categoryMap.get(categoryName) : defaultCategoryId;\n      \n      if (!categoryId && categoryName) {\n        console.warn(`Plant \"${plantName}\" has category \"${categoryName}\" but no matching ID found. Assigning to default category \"${defaultCategory.name}\".`);\n        categoryId = defaultCategoryId;\n      } else if (!categoryId && !categoryName) {\n        categoryId = defaultCategoryId;\n      }\n      \n      let stock = 0;\n      if (item.Stock !== undefined && item.Stock !== null && String(item.Stock).trim() !== '') {\n        const parsedStock = parseInt(String(item.Stock), 10);\n        if (!isNaN(parsedStock)) {\n          stock = parsedStock;\n        }\n      }\n\n      let imageUrl = `https://picsum.photos/seed/${encodeURIComponent(plantName)}/400/300`;\n      const rawThumbnail = item.Thumbnail;\n      if (rawThumbnail) {\n        let cleanedThumbnail = String(rawThumbnail).replace(/[\\n\\r]+/g, ' ').trim();\n        if (cleanedThumbnail && (cleanedThumbnail.startsWith('http://') || cleanedThumbnail.startsWith('https://'))) {\n          try {\n            new URL(cleanedThumbnail);\n            imageUrl = cleanedThumbnail;\n          } catch (e) {\n            console.warn(`Invalid URL structure for plant \"${plantName}\" thumbnail: \"${cleanedThumbnail}\". Using placeholder.`);\n          }\n        }\n      }\n      \n      return {\n        id: `${plantName.toLowerCase().replace(/\\s+/g, '-')}-${index}`,\n        name: plantName,\n        categoryId: categoryId || defaultCategoryId,\n        imageUrl: imageUrl,\n        height: item[\"גובה\"]?.trim() || 'N/A',\n        watering: item[\"השקיה\"]?.trim() || 'N/A',\n        uses: item[\"שימושים\"]?.trim() || 'N/A',\n        light: item.Tag?.trim() || 'N/A',\n        stock: stock,\n        description: item[\"שימושים\"]?.trim() || '',\n        createdAt: new Date(),\n        updatedAt: new Date(),\n      };\n    })\n    .filter(plant => plant !== null) as Omit<MongoPlant, '_id'>[];\n\n  if (plants.length > 0) {\n    await collection.insertMany(plants);\n  }\n}\n\nexport async function clearCachedPlantData(): Promise<void> {\n  allCategories = null;\n  await clearCachedCategories();\n}\n"],"names":[],"mappings":";;;;;;;;;;;;IAiCsB;IAMA;IAgBA;IAaA;IAiBA;IAYA;IASA;IAkEA","debugId":null}},
    {"offset": {"line": 711, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/services/categoryService.ts"],"sourcesContent":["'use server';\nimport type { Category } from '@/lib/types';\nimport { getCollection } from './mongodbService';\nimport { ObjectId } from 'mongodb';\n\ninterface MongoCategory extends Category {\n  _id: ObjectId;\n}\n\nfunction mapMongoCategoryToCategory(mongoCategory: MongoCategory): Category {\n  const { _id, ...categoryData } = mongoCategory;\n  return categoryData;\n}\n\nexport async function getCategories(): Promise<Category[]> {\n  const collection = await getCollection('categories');\n  const mongoCategories = await collection.find({}).toArray() as MongoCategory[];\n  return mongoCategories.map(mapMongoCategoryToCategory);\n}\n\nexport async function addCategory(categoryData: Omit<Category, 'id'>): Promise<Category> {\n  const collection = await getCollection('categories');\n  const newCategory: Omit<MongoCategory, '_id'> = {\n    id: categoryData.name.toLowerCase().replace(/\\s+/g, '-') || `category-${Date.now()}`,\n    ...categoryData\n  };\n\n  const result = await collection.insertOne(newCategory);\n  const insertedCategory = await collection.findOne({ _id: result.insertedId }) as MongoCategory;\n  return mapMongoCategoryToCategory(insertedCategory);\n}\n\nexport async function updateCategory(categoryId: string, categoryData: Partial<Omit<Category, 'id'>>): Promise<void> {\n  const collection = await getCollection('categories');\n  const result = await collection.updateOne(\n    { id: categoryId },\n    { $set: categoryData }\n  );\n  \n  if (result.matchedCount === 0) {\n    throw new Error(\"Category not found\");\n  }\n}\n\nexport async function deleteCategory(categoryId: string): Promise<void> {\n  const collection = await getCollection('categories');\n  const result = await collection.deleteOne({ id: categoryId });\n  \n  if (result.deletedCount === 0) {\n    throw new Error(\"Category not found for deletion\");\n  }\n}\n\nexport async function clearCachedCategories(): Promise<void> {\n  // No need to clear cache as we're using MongoDB directly\n}\n"],"names":[],"mappings":";;;;;;;;;IAcsB;IAMA;IAYA;IAYA;IASA","debugId":null}},
    {"offset": {"line": 731, "column": 0}, "map": {"version":3,"sources":["file:///Users/amirlugasi/greendb/src/app/page.tsx"],"sourcesContent":["\"use client\"; \n\nimport { useState, useEffect, useMemo, useCallback } from 'react';\nimport { PlantCard } from \"@/components/PlantCard\";\nimport type { Plant, Category } from \"@/lib/types\";\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Search, Sprout, Leaf, Flower2, X, Loader2, Tags, Trees, Sun } from 'lucide-react';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { getPlantsWithCategories } from '@/services/plantService';\nimport { getCategories } from '@/services/categoryService';\nimport { useToast } from '@/hooks/use-toast';\n\n\n// Dynamically create iconMap for category icons\nconst availableIconsList = [\n  { name: 'Sprout', IconComponent: Sprout },\n  { name: 'Leaf', IconComponent: Leaf },\n  { name: 'Flower2', IconComponent: Flower2 },\n  { name: 'Tags', IconComponent: Tags }, // Default/fallback icon\n  { name: 'Trees', IconComponent: Trees },\n  { name: 'Sun', IconComponent: Sun }, // For succulents example\n];\nconst iconMap: Record<string, React.ElementType> = availableIconsList.reduce((acc, curr) => {\n  acc[curr.name] = curr.IconComponent;\n  return acc;\n}, {} as Record<string, React.ElementType>);\n\n\nexport default function HomePage() {\n  const [plants, setPlants] = useState<Plant[]>([]);\n  const [categories, setCategories] = useState<Category[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isFiltering, setIsFiltering] = useState(false); // For category clicks / search\n  const [selectedCategory, setSelectedCategory] = useState<string | null>(null);\n  const [searchTerm, setSearchTerm] = useState<string>('');\n  const { toast } = useToast();\n\n  const fetchData = useCallback(async () => {\n    setIsLoading(true);\n    try {\n      const [fetchedPlants, fetchedCategories] = await Promise.all([\n        getPlantsWithCategories(),\n        getCategories()\n      ]);\n      setPlants(fetchedPlants);\n      setCategories(fetchedCategories);\n    } catch (error) {\n      console.error(\"HomePage fetchData error:\", error);\n      const errorMessage = error instanceof Error ? error.message : \"An unknown error occurred.\";\n      toast({ \n        title: \"שגיאה בטעינת נתונים\", \n        description: `לא ניתן לטעון נתונים מהשרת. ${errorMessage}. בדוק את חיבור האינטרנט. פרטים נוספים עשויים להיות ביומן השרת.`, \n        variant: \"destructive\",\n        duration: 10000 // Show for longer\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  }, [toast]);\n\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  const handleFilterChange = useCallback(async () => {\n    setIsFiltering(true);\n    // Simulate filtering delay or re-fetch if necessary.\n    // For client-side filtering from `plant-data.json`, this is mostly for UX.\n    await new Promise(resolve => setTimeout(resolve, 300));\n    setIsFiltering(false);\n  }, []);\n\n  useEffect(() => {\n    handleFilterChange();\n  }, [selectedCategory, searchTerm, handleFilterChange]);\n\n\n  const filteredPlants = useMemo(() => {\n    return plants.filter(plant => {\n      const matchesCategory = selectedCategory ? plant.categoryId === selectedCategory : true;\n      const matchesSearch = searchTerm ? plant.name.toLowerCase().includes(searchTerm.toLowerCase()) : true;\n      const inStock = plant.stock > 0;\n      return matchesCategory && matchesSearch && inStock;\n    });\n  }, [plants, selectedCategory, searchTerm]);\n\n  const CategoryIcon = ({ iconName }: { iconName?: string }) => {\n    const ResolvedIcon = iconName && iconMap[iconName] ? iconMap[iconName] : Tags;\n    return ResolvedIcon ? <ResolvedIcon className=\"h-8 w-8 mb-1\" /> : <Tags className=\"h-8 w-8 mb-1\" />;\n  };\n\n  if (isLoading && plants.length === 0 && categories.length === 0) { \n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-200px)]\">\n        <Loader2 className=\"h-16 w-16 animate-spin text-primary mb-4\" />\n        <p className=\"text-muted-foreground\">טוען צמחים וקטגוריות...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-8\">\n      <section className=\"text-center py-8 bg-gradient-to-r from-primary/10 via-background to-primary/10 rounded-lg shadow\">\n        <h1 className=\"text-4xl font-bold text-primary mb-2\">ברוכים הבאים למשתלת גל-עד גרינז!</h1>\n        <p className=\"text-lg text-foreground\">גלו מגוון רחב של צמחים לבית ולגינה, הכל באהבה מהקהילה.</p>\n      </section>\n\n      <section className=\"sticky top-16 bg-background/95 backdrop-blur-sm z-40 py-4 -mx-4 px-4 rounded-b-lg shadow-sm\">\n        <div className=\"flex flex-col md:flex-row gap-4 items-center\">\n          <div className=\"relative flex-grow w-full md:w-auto\">\n            <Input\n              type=\"text\"\n              placeholder=\"חפש צמח...\"\n              value={searchTerm}\n              onChange={(e) => setSearchTerm(e.target.value)}\n              className=\"pl-10 h-11 text-base\"\n            />\n            <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 h-5 w-5 text-muted-foreground\" />\n          </div>\n          \n          <div className=\"w-full md:w-auto md:min-w-[200px]\">\n            <Select\n                value={selectedCategory || \"all\"}\n                onValueChange={(value) => setSelectedCategory(value === \"all\" ? null : value)}\n              >\n                <SelectTrigger className=\"w-full h-11 text-base\">\n                  <SelectValue placeholder=\"סנן לפי קטגוריה\" />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"all\">כל הקטגוריות</SelectItem>\n                  {categories.map(category => (\n                    <SelectItem key={category.id} value={category.id}>\n                      {category.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n          </div>\n           { (selectedCategory || searchTerm) && (\n            <Button \n              variant=\"ghost\" \n              onClick={() => {\n                setSelectedCategory(null);\n                setSearchTerm('');\n              }}\n              className=\"h-11 text-muted-foreground hover:text-destructive\"\n              aria-label=\"נקה חיפוש וסינון\"\n            >\n              <X size={18} className=\"mr-1\" /> נקה סינון\n            </Button>\n           )}\n        </div>\n      </section>\n      \n      {categories.length > 0 && !isLoading && filteredPlants.length > 0 && (\n        <section id=\"categories\" className=\"pt-4\">\n          <h2 className=\"text-2xl font-semibold text-primary mb-4\">קטגוריות</h2>\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-3\">\n            {categories.map(category => (\n              <Button\n                key={category.id} // Ensure unique key\n                variant={selectedCategory === category.id ? \"default\" : \"outline\"}\n                className={`flex flex-col items-center justify-center p-4 h-24 rounded-lg shadow hover:shadow-md transition-all text-center ${selectedCategory === category.id ? 'bg-primary text-primary-foreground' : 'bg-card hover:bg-accent/10'}`}\n                onClick={() => setSelectedCategory(category.id === selectedCategory ? null : category.id)}\n              >\n                <CategoryIcon iconName={category.icon} />\n                <span className=\"text-sm font-medium\">{category.name}</span>\n              </Button>\n            ))}\n          </div>\n        </section>\n      )}\n\n      <section>\n        <h2 className=\"text-2xl font-semibold text-primary mb-6\">הצמחים שלנו</h2>\n        {isFiltering ? ( // Show loader when actively filtering\n            <div className=\"flex justify-center items-center py-8\">\n                <Loader2 className=\"h-10 w-10 animate-spin text-primary\" />\n            </div>\n        ) : filteredPlants.length > 0 ? (\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n            {filteredPlants.map(plant => (\n              <PlantCard key={plant.id} plant={plant} />\n            ))}\n          </div>\n        ) : (\n          <p className=\"text-center text-muted-foreground py-8\">\n            {plants.length === 0 && !isLoading && !isFiltering ? \"לא נמצאו צמחים במערכת כרגע. אנא בדוק מאוחר יותר.\" : \"לא נמצאו צמחים התואמים את בחירתך. נסה חיפוש או סינון אחר.\"}\n          </p>\n        )}\n      </section>\n    </div>\n  );\n}\n\n"],"names":[],"mappings":"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","debugId":null}}]
}